#include "HCPCA9685.h"
 
/* I2C slave address for the device/module. For the HCMODU0097 the default I2C address
 
is 0x40 */
 
#define  I2CAdd 0x40
 
/* Create an instance of the library */
 
HCPCA9685 HCPCA9685(I2CAdd);
 
void setup()
 
{
 
  /* Initialise the library and set it to 'servo mode' */
 
HCPCA9685.Init(SERVO_MODE);
 
  /* Wake the device up */
 
HCPCA9685.Sleep(false);
 
}
 
void loop()
 
{
 
int Pos;
 
  /* Sweep the servo back and forth from its minimum to maximum position. If your servo is hitting its end stops then you should adjust the values so that the servo can sweep though its full range without hitting the end stops. You can adjust the min & max positions by altering the trim values in the libraries HCPCA9685.h file*/

Pos = 10; 
 HCPCA9685.Sleep(false);
HCPCA9685.Servo(15, Pos);
delay(1000);
 
HCPCA9685.Servo(14, Pos);
delay(1000);

HCPCA9685.Servo(13, Pos);
delay(1000);

HCPCA9685.Servo(12, Pos);
delay(1000);
                                  
HCPCA9685.Sleep(true);
delay(5000);

Pos = 300; 
HCPCA9685.Sleep(false);
 
HCPCA9685.Servo(15, Pos);
 
HCPCA9685.Servo(14, Pos);
delay(1000);

HCPCA9685.Servo(13, Pos);
delay(1000);

HCPCA9685.Servo(12, Pos);
delay(1000);

HCPCA9685.Sleep(true);
 
delay(5000);
 
 
}
